#!/usr/bin/env bash

CONTAINER_ID=$1

mysql_command="mysql"
mysql_sql_cache=()

_docker_exec() {
	IFS=" "
	local COMMAND="env TERM=xterm $*"
	docker exec -i $CONTAINER_ID $COMMAND
}

_docker_exec_with_tty() {
	IFS=" "
	local COMMAND="env TERM=xterm $*"
	docker exec -it $CONTAINER_ID $COMMAND
}

_mysql_open() {
	_docker_exec_with_tty "$mysql_command"
}

_mysql_run() {
	local COMMAND=$1
	echo "$COMMAND" | _docker_exec "$mysql_command"
}

_mysql_setup() {
	local USER=$1; local PW=$2; local DB=$3
	mysql_command="mysql -u$USER -p$PW $DB"
}

_mysql() {
	mysql_sql_cache+=("$1")
}

_mysql_flush() {
	IFS=$'\n'
	_mysql_run "${mysql_sql_cache[*]}"
	mysql_sql_cache=()
}


case "$2" in
	create)
		DB=$3; DB_PW=$4; ADMIN_PW=$5

		_mysql_setup root $ADMIN_PW mysql
		_mysql "CREATE USER '$DB'@'%' IDENTIFIED BY '$DB_PW';"
		_mysql "CREATE DATABASE $DB;"
		_mysql "GRANT ALL PRIVILEGES ON $DB.* To '$DB'@'%';"
		_mysql_flush
		;;

	destroy)
		DB=$3; ADMIN_PW=$4

		_mysql_setup root $ADMIN_PW mysql
		_mysql "DROP USER '$DB'@'%';"
		_mysql "DROP DATABASE $DB;"
		_mysql_flush
		;;

	user-connect)
		DB=$3; DB_PW=$4

		_mysql_setup $DB $DB_PW $DB
		_mysql_open
		;;

	connect)
		if [[ -z $4 ]]; then
			DB=mysql; ADMIN_PW=$3
		else
			DB=$3; ADMIN_PW=$4
		fi

		_mysql_setup root $ADMIN_PW $DB
		_mysql_open
		;;

	status)
		ADMIN_PW=$3

		_docker_exec mysqladmin -u root --password=$ADMIN_PW status
		;;

	shutdown)
		ADMIN_PW=$3

		_docker_exec mysqladmin -u root --password=$ADMIN_PW shutdown
		;;

	list)
		ADMIN_PW=$3

		_mysql_setup root $ADMIN_PW mysql
		_mysql "SHOW DATABASES;"
		_mysql_flush
		;;

	dump)
		DB=$3; ADMIN_PW=$4

		_docker_exec mysqldump -u root --password=$ADMIN_PW $DB
		;;
esac
